#!/bin/sh
# Shell prompt based on the Solarized Dark theme.
# Screenshot: http://i.imgur.com/EkEtphC.png
# Heavily inspired by @necolas’s prompt: https://github.com/necolas/dotfiles
# iTerm → Profiles → Text → use 13pt Monaco with 1.1 vertical spacing.
# vim: set filetype=sh :

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM='gnome-256color';
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM='xterm-256color';
fi;

prompt_git() {
	local s='';
	local branchName='';

	# Check if the current directory is in a Git repository.
	if [ "$(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}")" == '0' ]; then

		# check if the current directory is in .git before running git checks
		if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]; then

			if [[ -O "$(git rev-parse --show-toplevel)/.git/index" ]]; then
				git update-index --really-refresh -q &> /dev/null;
			fi;

			# Check for uncommitted changes in the index.
			if ! git diff --quiet --ignore-submodules --cached; then
				s+='+';
			fi;

			# Check for unstaged changes.
			if ! git diff-files --quiet --ignore-submodules --; then
				s+='!';
			fi;

			# Check for untracked files.
			if [ -n "$(git ls-files --others --exclude-standard)" ]; then
				s+='?';
			fi;

			# Check for stashed files.
			if git rev-parse --verify refs/stash &>/dev/null; then
				s+='$';
			fi;

		fi;

		# Get the short symbolic ref.
		# If HEAD isn’t a symbolic ref, get the short SHA for the latest commit
		# Otherwise, just give up.
		branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
			git rev-parse --short HEAD 2> /dev/null || \
			echo '(unknown)')";

		[ -n "${s}" ] && s=" [${s}]";

		echo -e "${1}${branchName}${light_blue}${s}";
	else
		return;
	fi;
}

#Prompt setup

reset="\\e[0m" # No Color
white="\\e[1;37m"
black="\\e[0;30m"
blue="\\e[0;34m"
light_blue="\\e[1;34m"
green="\\e[0;32m"
light_green="\\e[1;32m"
cyan="\\e[0;36m"
light_cyan="\\e[1;36m"
red="\\e[0;31m"
light_red="\\e[1;31m"
purple="\\e[0;35m"
light_purple="\\e[1;35m"
brown="\\e[0;33m"
yellow="\\e[1;33m"
gray="\\e[0;30m"
light_gray="\\e[0;37m"


PS1="\\[${light_red}\\]\\u\\[${white}\\]@\\[${light_cyan}\\]\\h \\[${purple}\\]\\w\$(prompt_git \"\\[${white}\\] on \\[${light_green}\\]\")\\[${light_blue}\\]\\n\\$\\[${reset}\\] ";
export PS1;

PS2="\\[${yellow}\\]→ \\[${reset}\\]";
export PS2;
